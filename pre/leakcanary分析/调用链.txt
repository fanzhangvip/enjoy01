ActivityThread.java
handleBindApplication 5536 
installContentProviders 5853
-> installContentProviders  5925
-> installProvider 5938
-> localProvider.attachInfo 6391
ContentProvider.java
-> attachInfo 1895
->  ContentProvider.this.onCreate() 1917


mInstrumentation.callApplicationOnCreate(app)  5871
Instrumentation.java
-> callApplicationOnCreate 1153

OOM 
new Object() 10KB内存  只剩8KB 

LeakCanary  高贵 1秒杀
检测 activity  fragment 自动监控
监控其他对象
AppWatcher.objectWatcher.watch(schrodingerCat,"schrodingerCat")



 square  okhttp  retrofit 5mins
 
 内存溢出 OOM 
 
 内存泄漏 
 
 垃圾回收机制 
 强引用 
 gsRoots  可达
 
 1. leakcanary 依赖进来之后 它在哪儿初始化的？
 
 AndroidManifest.xml 　<provider> LeakSentryInstaller
 onCreate() 初始化InternalLeakSentry.install(application)
 
 app启动 -》 
handleBindApplication
创建
makeApplication： DebugExampleApplication 
如果你注册了ContentProvider
installContentProviders
localProvider.attachInfo(c, info);
 ContentProvider.this.onCreate();

mInstrumentation.callApplicationOnCreate(app);
 app.onCreate();DebugExampleApplication

ContentProvider.oncreate  先于 Application的onCreate调用的
提醒：dev 

启动速度优化 

2. leakcanary初始化 干了些什么事情？ 
1. 创建了RefWatcher对象  watch 
2. activity  fragment自动监控 原理？ 
   LifeCycle 
3. 其他一些初始化工作
heapDumper 当你确定了存在内存泄漏 dump 堆栈
gcTrigger  gc
启动了一个检测内存泄漏的工作线程   1.x UI主线程idle

heapDumpTrigger 检测内存泄漏

fun Application.registerVisibilityListener
应用 从不可见-》 可见 
     可见 -》 不可见

1.x 通过轮询检测	

可见 -》 不可见
做一次内存泄漏 scheduleRetainedInstanceCheck
watch 主动做一次内存泄漏检测



System.gc
Runtime.getRuntime()//主要这里不是使用System.gc,因为它仅仅是通知系统在合适的时间进行一次垃圾回收操作
          .gc()

Kotlin 还不学习kotlin  淘汰

面试： leakcanary检测内存泄漏的核心原理？ 



1. 把需要监控的对象 watchedReferences
要监控的引用
referenc  -- key 

过5秒
5秒之内 referenc =null 
被加入到ReferenceQueue

gc之后，如果我发现retainedReferences还有引用，说明可能存在内存
泄漏
2. retainedReferences

3. ReferenceQueue

最终retainedReferences.size > 0 可能存在内存泄漏
dump  分析
HAHA 
Handle  Looper -> MessageQueue-> Meassage -> Handler ->Activity

Context  application  activity  service contentprovider 

内存问题：  leakcanary 

Android 知识体系 

面试  面不上 
Android高级  一线 互联网
市场上要求的高级工程师： 掌握  Android 知识体系
造轮子 
retrofit  
new Thread 

baidu google  666

多长时间 学废了
 8个月 
 1. 不仅仅是直播课程
 2. 工作遇到问题 帮助解决
 3. 面试简历指导 收到大厂的面试通知 模拟面试 快速的进入大厂
 8个月 知识体系学废了
 
 3.0 大纲 升级
 
 5380钱多吗？
 再贵学费 % 365  很小的投资
 再小的学习*365  拉开巨大差距 
 学习，最高的不是学费
 而是一去不复返的黄金时间 
XSkin


皮肤指什么？

app-debug.apk  资源包  图片 

插件化   默认的资源
预览  选择了某款
下载  后台
应用  加载进来 替换

看小说 白天 黑夜
换 theme 

apk 增大 

apk  其实就是一个zip包

java  编译 .class 
res下面的资源  aapt (aapt2) -> R.java 
                             assets文件和raw 不会改变
							 二进制编码 
							 resoure.arsc 
							 
							 
1.  哪些控件 
xml  转换成view  的过程？ 

一个页面就是一个Activity 
Activity 
  Window 
   DecorView
     ContentView
	    activity_main.xml -> view 
		
json 

json 格式良好

view -> AppCompatXXXView

createViewFromTag  
name  

反射 ： 
1. 不包含点 。 系统原生
android.view.
TextView


2.  自定义view 
androidx.constraintlayout.widget.ConstraintLayout -》  Class对象
com.enjoy02.changeskindemo.ZeroView

final Object[] mConstructorArgs = new Object[2];
Context ，attrs 


 public ZeroView(Context context, AttributeSet attrs) {
        this(context, attrs,0);
}

final View view = constructor.newInstance(args);

做过自定义view  1 
		
		
LayoutInflater 
Pull解析 
哪几种xml解析方式？ 
pull  dom  sax  基本功 

		


2.  换哪些属性 
自定义属性 

3. 外部的资源如何加载  - >   getResources 	context 
Resource  

打包 
aapt2 
res/    除去asset   /raw（id） 

id  -  name 

apk 本身
id - name 
getResourceEntryName  -> name 

资源包 
getIdentifier(name, "drawable", mOutPkgName) ->  id1 

id1 - name 
插件化换肤  难 
做Android 几年了 
3年以上  能力  年限 不匹配
 很不幸 ： 技术迭代太快  
           rxjava  -> 快过时了 (协程)
		   mvp 
		   jetpack compose 
		   
		   80%  kotlin 
		   eclipse -> AS 
		   
幸运： 	有快速学习的能力  更多更先进的技术  多拿 

 	

1多小时： 
       xml -> view 
       插件化 资源加载 
	   
	   看书  看博客   zero老师  快 
	   
	   点 -》  vip  知识体系 
	   
	   1，计算机或相关专业本科及以上学历，5年以上工作经验，至少参加过一个完整的中型商业级手机应用开发项目。
2，精通Java语言，熟悉Android系统架构及相关技术、精通Android平台UI设计，熟悉Android SDK不同版本的主要性。
3，对网络编程、多线程、设计模式、高可用程序架构等有深入的理解。
4，理解行业内流行的Android开源代码的结构和核心底层库，对Android底层接口有一定的认识。
5，掌握tcp/ip协议、HTTP协议，对数据加密、防破解有较强的理解。
6，熟练掌握kotlin者、利用工具能有效提高开发效率者优先。
7、熟悉跨平台开发，对RN有深度开发者优先；有自己开源项目者优先。
8，具备强烈的进取心和责任感, 极强的学习能力及良好的和跨团队合作能力,善于沟通,定期分享。
	   
Android高级工程师必备的知识体系  8 - 10 
高级  伪 
3-5 BAT 面试通知  ——》 面不过 

知识体系	   
		   
		   retrofit  api  interface  method  泛型 注解  反射 动态代理  OKhttp Requst
		   
		   class<T>  具体的Java类型
		   class<?> ? 不确定的java类型
		   
		   List<String>[] array = new ArrayList<string>[10];//error
		   
		   List<？>[] array = new ArrayList<？>[10]；//right 


不规则的UI 

ble 蓝牙项目 
广播 

tinker 占坑 管理 activity 

性能优化  写框架 
风口 NDK 混合开发 
人  1 岗位 -》 1000 入门

5980  知识体系 8-10   25K 16个 
一个星期 
vip  20% 