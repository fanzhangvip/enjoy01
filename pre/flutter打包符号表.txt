
主讲老师Zero老师：2124346685
想要本节课视频阿媛老师：2807762965



主讲老师Zero老师：2124346685
课程咨询安生老师：669100976

同学们是否觉得现在android开发越来越简单了
网络请求 以前怎么样 现在怎么样
图片加载 
不清楚Android的原理了，就实实在在的搬砖
这是一个初级工程师所做的

如何定义高级

在广度 和深度上学习
如何学习
那么zero老师现在来给大家指明一条道路

现在的Android提供的api功能越来越丰富了，使用越来越简单了
这对我们Android开发者来说是好事 也是坏事
1.加快我们构建app的速度
2. 只会使用api的开发者必将要淘汰

BTA 造砖  小公司 搬砖

Zero 老师：
曾就职于阿里/Nubia，移动架构师

精通领域：
    Android FrameWork层源码，性能优化，NDK开发；
	曾参加手机Rom开发，对Android 手机系统架构有深入理解；
	精通Android 高级控件开发，性能优化，多种开源框架开发经验;
	
	
	
	
	
flutter打包生成符号表
flutter build apk --target-platform=android-arm64 --obfuscate --split-debug-info=./symboldir

flutter symbolize -i hello3.txt -d app.android-arm64.symbols	
	





















	
	
	
OSI 参考模型 jvm
TCP/IP

Http 


tcpdump	-》 waveshark http 基于tcp  三次握手 

fiddle charls

SYN 
tcp 数据包结构
  0          15           31
1 源端口     | 目的端口
2         序号
3		 确认号
4 数据偏移 保留 URG ACK PSH RST SYN FIN |	 窗口大小
5 
6 
7	

三次握手
1 C -》 S  SYN=1 seq = J (系统随机生成) CLOSED -》 SYN_SENT
2 S -> C   SYN=1,ACK =1 ack= J + 1 seq = K established
3 C -》 S  ACK=1，ack = K+ 1

全双工
半双工
单工

why ?  
2 
4

三次握手是干了什么事情
可靠性 
fragment 段 序号 
交换tcp 通信的初始序号   
100 
string  1000
101 200 201 300 

四次挥手 
    C                    S 
1.   FIN  -》 

2          ACK                 

3          FIN 

4          ACK   


C  established  发生FIN  —— 》 FIN-WAIT-1 - FIN-WAIT-2   ACK  TIME-WAIT  2MSL    

MSL  Maxmun Segment Lifetime 报文最大生存时间         

	
tcpNoDelay	
	
	
	
资料	
http://www.52im.net/thread-33-1-1.html	
https://blog.csdn.net/qq_39436605/article/details/82734704




	
https://ke.qq.com/webcourse/index.html#cid=347420&term_id=100413130&taid=2824726976482588&type=1024&vid=f1432rnwa7y	









	
	
客户端发出请求（ClientHello）
		（1） 支持的协议版本，比如TLS 1.0版。
		（2） 一个客户端生成的随机数，稍后用于生成"对话密钥"。
		（3） 支持的加密方法，比如RSA公钥加密。
		（4） 支持的压缩方法
		
服务器回应（SeverHello）
		（1） 确认使用的加密通信协议版本，比如TLS 1.0版本。
		（2） 一个服务器生成的随机数，稍后用于生成"对话密钥"。
		（3） 确认使用的加密方法，比如RSA公钥加密。
		（4） 服务器证书。
		
客户端回应		
	     （1） 一个随机数。该随机数用服务器公钥加密，防止被窃听。
		 （2） 编码改变通知，表示随后的信息都将用双方商定的加密方法和密钥发送。
         （3） 客户端握手结束通知
	
服务器的最后回应
		 （1）编码改变通知 
		 （2）服务器握手结束通知
		 
		 对称加密  加密过程 解码过程  钥匙是一样
		 非对称加密  加密  解码  钥匙不一样 
		 
		 RSA  pre-master-key 随机数
		 
		 如何保证公钥 不被篡改？
		 证书里面  公钥

		 非对称加密 非常消耗计算机资源	
         建立一次sesion 对称的秘钥

        1. 客户端向服务器索要并验证公钥
        2. 双方协商一个对话秘钥
        3. 双方采用这个 秘钥来通信 		
		
		SSLSocketFactory 
		 
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	



